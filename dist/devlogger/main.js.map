{"version":3,"sources":["./src/app/components/log-form/log-form.component.ts","./src/app/components/log-form/log-form.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/log.service.ts","./src/app/components/logs/logs.component.ts","./src/app/components/logs/logs.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Log } from '../../models/Log';\nimport { LogService } from '../../services/log.service';\n\n@Component({\n  selector: 'app-log-form',\n  templateUrl: './log-form.component.html',\n  styleUrls: ['./log-form.component.css'],\n})\nexport class LogFormComponent implements OnInit {\n  id: string;\n  text: string;\n  date: any;\n\n  isNew: boolean = true;\n\n  constructor(private logService: LogService) {}\n\n  ngOnInit(): void {\n    // Subscribe to the selectedLog observable\n    this.logService.selectedLog.subscribe((log) => {\n      if (log.id !== null) {\n        this.isNew = false;\n        this.id = log.id;\n        this.text = log.text;\n        this.date = log.date;\n      }\n    });\n  }\n\n  onSubmit() {\n    // Check if new log\n    if (this.isNew) {\n      // Create a new log\n      const newLog = {\n        id: this.generateId(),\n        text: this.text,\n        date: new Date(),\n      };\n      // Add log\n      this.logService.addLog(newLog);\n    } else {\n      // Create log to be updated\n      const updLog = {\n        id: this.id,\n        text: this.text,\n        date: new Date()\n      };\n      // Update log\n      this.logService.updateLog(updLog);\n    }\n\n    // Clear state\n    this.clearState();\n\n  }\n\n  clearState() {\n    this.isNew = true;\n    this.id = '';\n    this.text = '';\n    this.date = '';\n    this.logService.clearState();\n  }\n\n  generateId() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (\n      c\n    ) {\n      var r = (Math.random() * 16) | 0,\n        v = c == 'x' ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n}\n","<div class=\"card card-body mb-3\">\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <input\n        type=\"text\"\n        name=\"text\"\n        [(ngModel)]=\"text\"\n        class=\"form-control\"\n        placeholder=\"Add a log...\"\n      />\n    </div>\n    <input\n      type=\"submit\"\n      value=\"Add Log\"\n      [disabled]=\"!this.text\"\n      class=\"btn btn-light\"\n    />\n    <button\n      (click)=\"clearState()\"\n      type=\"button\"\n      class=\"btn btn-warning\"\n      [hidden]=\"!this.text\"\n    >\n      Clear\n    </button>\n  </form>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'devlogger';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <app-log-form></app-log-form>\n  <app-logs></app-logs>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LogFormComponent } from './components/log-form/log-form.component';\nimport { LogsComponent } from './components/logs/logs.component';\n\nimport { LogService } from './services/log.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LogFormComponent,\n    LogsComponent,\n  ],\n  imports: [BrowserModule, FormsModule],\n  providers: [LogService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-dark bg-dark mb-3\">\n  <div class=\"container\">\n    <a href=\"/\" class=\"navbar-brand\">DevLogger</a>\n  </div>\n</nav>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { of } from 'rxjs';\n\nimport { Log } from '../models/Log';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogService {\n  logs: Log[];\n\n  public log: Log = {\n    id: null,\n    text: null,\n    date: null,\n  };\n\n  private logSource = new BehaviorSubject<Log>(this.log);\n  selectedLog = this.logSource.asObservable();\n\n  private stateSource = new BehaviorSubject<boolean>(true);\n  stateClear = this.stateSource.asObservable();\n\n  constructor() {\n    // this.logs = [\n    //   {\n    //     id: '1',\n    //     text: 'Generated components',\n    //     date: new Date('12/26/2017 12:54:23'),\n    //   },\n    //   {\n    //     id: '2',\n    //     text: 'Added boostrap',\n    //     date: new Date('12/27/2017 09:33:23'),\n    //   },\n    //   {\n    //     id: '3',\n    //     text: 'Added logs component',\n    //     date: new Date('12/27/2017 12:00:23'),\n    //   },\n    // ];\n    this.logs = [];\n  }\n\n  getlogs(): Observable<Log[]> {\n    if (localStorage.getItem('logs') === null) {\n      this.logs = [];\n    } else {\n      this.logs = JSON.parse(localStorage.getItem('logs'));\n    }\n    return of(\n      this.logs.sort((a, b) => {\n        return b.date - a.date;\n      })\n    );\n  }\n\n  setFormLog(log: Log) {\n    this.logSource.next(log);\n  }\n\n  addLog(log: Log) {\n    this.logs.unshift(log);\n    // Add to local storage\n    localStorage.setItem('logs', JSON.stringify(this.logs));\n  }\n\n  updateLog(log: Log) {\n    this.logs.forEach((cur, index) => {\n      if (log.id === cur.id) {\n        this.logs.splice(index, 1);\n      }\n    });\n    this.logs.unshift(log);\n\n    // Update to local storage\n    localStorage.setItem('logs', JSON.stringify(this.logs));\n  }\n\n  deleteLog(log: Log) {\n    this.logs.forEach((cur, index) => {\n      if (log.id === cur.id) {\n        this.logs.splice(index, 1);\n      }\n    });\n    // Delete from to local storage\n    localStorage.setItem('logs', JSON.stringify(this.logs));\n  }\n\n  clearState() {\n    this.stateSource.next(true);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Log } from '../../models/Log';\nimport { LogService } from '../../services/log.service';\n\n@Component({\n  selector: 'app-logs',\n  templateUrl: './logs.component.html',\n  styleUrls: ['./logs.component.css'],\n})\nexport class LogsComponent implements OnInit {\n  logs: Log[];\n  selectedLog: Log;\n  loaded: boolean = false;\n\n  constructor(private logService: LogService) {}\n\n  ngOnInit() {\n    this.logService.stateClear.subscribe((clear) => {\n      if (clear) {\n        this.selectedLog = { id: '', text: '', date: '' };\n      }\n    });\n\n    this.logService.getlogs().subscribe((logs) => {\n      this.logs = logs;\n      this.loaded = true;\n    });\n  }\n\n  onSelect(log: Log) {\n    this.logService.setFormLog(log);\n    this.selectedLog = log;\n  }\n\n  onDelete(log: Log) {\n    if (confirm('Are you sure?')) {\n      this.logService.deleteLog(log);\n    }\n  }\n}\n","<ul class=\"list-group\" *ngIf=\"loaded && logs.length > 0\">\n  <li\n    *ngFor=\"let log of logs\"\n    [class.list-group-item-secondary]=\"selectedLog === log\"\n    class=\"list-group-item d-flex justify-content-between align-items-center\"\n  >\n    <a (click)=\"onSelect(log)\" href=\"#\">{{ log.text }}</a>\n    <span class=\"log-date\">{{ log.date | date: \"short\" }}</span>\n    <i (click)=\"onDelete(log)\" class=\"fa fa-remove\"></i>\n  </li>\n</ul>\n\n<div *ngIf=\"loaded && logs.length == 0\">\n  <h5>There are no logs in the system</h5>\n</div>\n\n<div *ngIf=\"!loaded\">\n  <h5>Loading...</h5>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}